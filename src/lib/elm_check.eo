      type Check_State: enum _Check_State {
         Unchecked,
         Checked,
         Indeterminate
      };

class Elm_Check (Elm_Layout, Elm_Interface_Atspi_Widget_Action)
{
   eo_prefix: elm_obj_check;
   properties {
      state {
         set {
            /*@
            @brief Set the on/off state of the check object

            This sets the state of the check. If set with elm_check_state_pointer_set()
            the state of that variable is also changed. Calling this @b doesn't cause
            the "changed" signal to be emitted.

            @ingroup Check */
         }
         get {
            /*@
            @brief Get the state of the check object

            @return The enum of states, first two states(Unchecked and checked) can be treated as boolean.

            @ingroup Check */
         }
         values {
            Check_State state; /*@ The state to use (0 == off, 1 == on, 2 == indeterminate) */
         }
      }
      state_pointer {
         set {
            /*@
            @brief Set a convenience pointer to a enum of state to change

            This sets a pointer to a enum of state, that, in addition to the check objects
            state will also be modified directly. To stop setting the object pointed
            to simply use NULL as the @p statep parameter. If @p statep is not NULL,
            then when this is called, the check objects state will also be modified to
            reflect the value of the enum of states @p statep points to, just like calling
            elm_check_state_set().

            @ingroup Check */
         }
         values {
            Check_State *statep; /*@ Pointer to the boolean to modify */
         }
      }
      three_state_mode {
         set {
            /*@
            @brief Set the enable/disable of three state mode of the check object

            This enables the three state mode. By default any checkbox will be changing states in two states. i.e. Checked and Unchecked
            On enabling this, it will start rotation of states into three states. Checked, Unchecked and Indeterminate

            @ingroup Check */
         }
         get {
            /*@
            @brief Get the enable/disable of three state mode of the check object

            @return The boolean value of enable/disable of three mode state change.

            @ingroup Check */
         }
         values {
            bool three_state_mode; /*@ The state to use (0 == Disabled, 1 == Enabled) */
         }
      }
   }
   implements {
      class.constructor;
      Eo.Base.constructor;
      Evas.Object_Smart.add;
      Elm_Widget.activate;
      Elm_Widget.focus_next_manager_is;
      Elm_Widget.focus_direction_manager_is;
      Elm_Widget.theme_apply;
      Elm_Widget.sub_object_del;
      Elm_Widget.event;
      Elm_Container.content_set;
      Elm_Layout.text_aliases.get;
      Elm_Layout.content_aliases.get;
      Elm_Layout.sizing_eval;
      Elm_Interface_Atspi_Accessible.state_set.get;
      Elm_Interface_Atspi_Widget_Action.elm_actions.get;
   }
   events {
      changed;
      language,changed;
      access,changed;
      focused;
      unfocused;
   }

}
