mixin Elm_Interface_Atspi_Accessible ()
{
   legacy_prefix: null;
   eo_prefix: elm_interface_atspi_accessible;
   data: null;
   methods {
      @property localized_role_name @protected {
         get {
            /*@ Gets an localized string describing ATSPI widget role name. */
         }
         values {
            const(char)* localized_name;
         }
      }
      @property name @protected {
         get {
            /*@ Gets an string describing ATSPI widget role name. 
                Should be free by a user. */
         }
         set {
         }
         values {
            char* name; /*@ obj name */
         }
      }
      @property relation_set @protected {
         get {
            /*@ Gets an string describing ATSPI widget role name. Lists and
            elements Should be free by a user. */
         }
         values {
            own(list<own(Elm_Atspi_Relation *)> *) relations;
         }
      }
      @property role @protected {
         get {
            /*@ Gets the role of the widget in ATSPI Accessibility domain. */
         }
         set {
         }
         values {
            Elm_Atspi_Role role;
         }
      }
      @property children @protected {
         get {
            /*@ Gets widget's accessible children. */
         }
         values {
            free(own(list<Eo *> *), eina_list_free) children;
         }
      }
      @property role_name @protected {
         get {
            /*@ Gets human-readable string indentifying widget accessibility
            role. */
         }
         values {
            const(char)* role_name;
         }
      }
      @property attributes @protected {
         get {
            /*@ Gets key-value pairs indentifying widget extra 
            attributes. Must be free by a user. */
         }
         values {
            free(own(list<own(Elm_Atspi_Attribute *)> *), elm_atspi_attributes_list_free) attributes;
         }
      }
      @property index_in_parent @protected {
         get {
            /*@ Gets index of the child in parent's children list. */
         }
         values {
            int idx;
         }
      }
      @property description @protected {
         get {
            /*@ Gets widget contextual information. */
         }
         set {
            /*@ Sets contextual information about widget. */
         }
         values {
            const(char)* description;
         }
      }
      @property parent @protected {
         get {
            /*@ Gets widget accessible parent. */
         }
         set {
            /*@ Sets widget accessible parent. */
         }
         values {
            Eo *parent;
         }
      }
      @property state_set @protected {
         get {
            /*@ Gets set describing widget accessible states. */
         }
         values {
            Elm_Atspi_State_Set states;
         }
      }
   }
   events {
      property,changed: const(char)*;
      children,changed: Elm_Atspi_Event_Children_Changed_Data;
      state,changed: Elm_Atspi_Event_State_Changed_Data;
      visible,data,changed;
      active,descendants,changed;
   }
}
